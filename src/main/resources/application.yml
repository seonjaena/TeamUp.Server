spring:
  servlet:
    multipart:
      max-file-size: 2048MB
      max-request-size: 2048MB

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  logging:
    config: classpath:logback-spring.xml

  mail:
    host: smtp.mailgun.org
    port: 587
    from: ${SEND_EMAIL}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

jwt:
  secret: ${JWT_SECRET_KEY}
  expire:
    # 5분 (1000 * 60 * 5 = 300000) / 30분 (1000 * 60 * 30 = 1800000) / 1시간 (1000 * 60 * 60 = 3600000)
    access: 1800000
    # 1일 (1000 * 60 * 24 = 1440000) / 1달 (1000 * 60 * 24 * 31 = 44640000)
    refresh: 1440000

server:
  forward-headers-strategy: native    # HttpServletRequest.getRemoteAddr()을 통해 X-Forwarded-For 헤더 정보를 가져오기 위함
  servlet:
    context-path: /teamup/api/web

service:
  email:
    verification:
      valid-minute: ${EMAIL_VERIFICATION_CODE_VALID_MIN:10}
    change-password:
      valid-minute: ${CHANGE_PASSWORD_LINK_VALID_MIN:60}
  phone:
    verification:
      valid-minute: ${PHONE_VERIFICATION_CODE_VALID_MIN:10}
  min-age: 15
  profile-image:
    default-path: profile-image/default.jpeg
    temp-dir: ${PROFILE_IMAGE_TEMP_DIR}
    permanent-dir: ${PROFILE_IMAGE_PERMANENT_DIR}
  zone-id: ${SERVICE_ZONE_ID:Asia/Seoul}

---
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:mariadb://${DB_HOST}:${DB_PORT:3306}/${DB_NAME:teamup}?characterEncoding=UTF-8&serverTimezone=Asia/Seoul&useUnicode=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
    open-in-view: false

  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST}
      password: ${REDIS_PASSWORD:#{null}}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    ses:
      send-email: ${SEND_EMAIL}
    s3:
      bucket: ${COMMON_DATA_BUCKET}
    region:
      static: ${AWS_REGION}
    stack:
      auto: false
  cool-sms:
    credentials:
      access-key: ${SMS_ACCESS_KEY}
      secret-key: ${SMS_SECRET_KEY}
    send-phone: ${SMS_SEND_PHONE}

front:
  base-url: ${FRONT_BASE_URL:https://together-nine.vercel.app}
---
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:mariadb://${DB_HOST}:${DB_PORT:3306}/${DB_NAME:teamup}?characterEncoding=UTF-8&serverTimezone=Asia/Seoul&useUnicode=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: false
    open-in-view: false

  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST}
      password: ${REDIS_PASSWORD:#{null}}

cloud:
  aws:
    ses:
      send-email: ${SEND_EMAIL}
    s3:
      bucket: ${COMMON_DATA_BUCKET}
    region:
      static: ${AWS_REGION}
    stack:
      auto: false
  cool-sms:
    credentials:
      access-key: ${SMS_ACCESS_KEY}
      secret-key: ${SMS_SECRET_KEY}
    send-phone: ${SMS_SEND_PHONE}

front:
  base-url: ${FRONT_BASE_URL:https://together-nine.vercel.app}